services:
  nginx:
    image: nginx:latest
    container_name: project_nginx
    volumes:
      - ./:/var/www/backend
      - ./_docker/images/nginx/conf.d/:/etc/nginx/conf.d/
      - nginx_data:/etc/nginx
      - nginx_logs:/etc/nginx/logs
    ports:
      - "8000:80"
    depends_on:
      - php
    networks:
      - project_network

  php:
    build:
      context: .
      dockerfile: ./_docker/images/php/Dockerfile
    container_name: project_php
    volumes:
      - ./:/var/www/backend
    depends_on:
      - mysql
    networks:
      - project_network

  mysql:
    image: mysql:8.2.0
    container_name: project_mysql
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --log_bin_trust_function_creators=1
    env_file:
      - ./_docker/images/mysql/mysql.env
    networks:
      - project_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: project_pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 100000000
    restart: always
    ports:
      - "8081:80"
    networks:
      - project_network

  redis:
    image: redis:latest
    container_name: project_redis
    command:
      [
          "sh",
          "-c",
          "redis-server --requirepass $${REDIS_PASSWORD}"
      ]
    restart: always
    ports:
        - "6379:6379"
    volumes:
        - redis_data:/data
    environment:
        REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
        - project_network

networks:
  project_network:
    driver: bridge

volumes:
  nginx_data:
    driver: local
  nginx_logs:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
